<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Applications | Elevate Workforce Solutions</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: #f5f5f5;
            margin: 0;
            padding: 0;
            display: flex;
            color: #555;
        }
        .sidebar {
            width: 260px;
            background: linear-gradient(135deg, #a8edea, #fed6e3);
            padding: 20px;
            height: 100vh;
            position: fixed;
        }
        .sidebar h2 {
            font-size: 22px;
            margin-bottom: 10px;
        }
        .sidebar ul {
            list-style: none;
            padding: 0;
        }
        .sidebar ul li {
            padding: 15px;
            cursor: pointer;
            border-radius: 10px;
        }
        .sidebar ul li:hover, .sidebar ul li.active {
            background: #e6e6e6;
        }
        #content {
            margin-left: 290px;
            padding: 40px;
            flex-grow: 1;
        }
        .job-card {
            background: white;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .application-card {
            background: #f9f9f9;
            padding: 15px;
            margin-top: 10px;
            border-radius: 5px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        .application-card p {
            margin: 5px 0;
        }
        .action-buttons {
            margin-top: 10px;
        }
        .action-buttons button {
            padding: 5px 10px;
            margin-right: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .accept {
            background-color: green;
            color: white;
        }
        .accept:hover {
            background-color: darkgreen;
        }
        .reject {
            background-color: red;
            color: white;
        }
        .reject:hover {
            background-color: darkred;
        }
        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
                text-align: center;
            }
            #content {
                margin-left: 0;
                padding: 15px;
            }
        }
    </style>
</head>
<body>
    <aside class="sidebar">
        <h2>Elevate Workforce Solutions</h2>
        <nav>
            <ul>
                <li class="<%= (page === 'company') ? 'active' : '' %>">
                    <a href="/company">Home</a>
                </li>
                <li class="<%= (page === 'job') ? 'active' : '' %>">
                    <a href="/companyJobs">Job</a>
                </li>
                <li class="<%= (page === 'companyjobApplications') ? 'active' : '' %>">
                    <a href="/jobapplicationCompany">Job Applications</a>
                </li>
                <li class="<%= (page === 'contact') ? 'active' : '' %>">
                    <a href="/contactCompany">Contact</a>
                </li>
                <li class="<%= (page === 'terms') ? 'active' : '' %>">
                    <a href="/termsCompany">Terms & Conditions</a>
                </li>
                <li class="<%= (page === 'aboutme') ? 'active' : '' %>">
                    <a href="/mePage">Me</a>
                </li>
            </ul>
        </nav>
    </aside>

    <div id="content">
        <h1>Job Applications</h1>
        <div id="applicationsList"></div>
    </div>

    <script>
        async function fetchJobApplications() {
            try {
                const response = await fetch('/api/job/getAllApplications'); // Adjust the endpoint as necessary
                if (!response.ok) throw new Error('Failed to fetch applications');
                const applications = await response.json();
                displayApplications(applications);
            } catch (error) {
                console.error('Error fetching applications:', error);
                document.getElementById('applicationsList').innerHTML = '<p>Error fetching applications</p>';
            }
        }

        function displayApplications(applications) {
            const applicationsList = document.getElementById('applicationsList');
            applicationsList.innerHTML = '';

            if (applications.length === 0) {
                applicationsList.innerHTML = '<p>No applications found.</p>';
                return;
            }

            // Group applications by jobId
            const groupedApplications = applications.reduce((acc, app) => {
                if (!acc[app.jobId]) {
                    acc[app.jobId] = [];
                }
                acc[app.jobId].push(app);
                return acc;
            }, {});

            // Display each job and its applications
            for (const jobId in groupedApplications) {
                const jobApplications = groupedApplications[jobId];
                const jobCard = document.createElement('div');
                jobCard.className = 'job-card';
                jobCard.innerHTML = `<h3>Job ID: ${jobId}</h3>`;
                
                jobApplications.forEach(app => {
                    const appCard = document.createElement('div');
                    appCard.className = 'application-card';
                    appCard.innerHTML = `
                        <p><strong>User ID:</strong> ${app.userId}</p>
                        <p><strong>Resume:</strong> <a href="${app.resumeUrl}" target="_blank">View Resume</a></p>
                        <p><strong>Cover Letter:</strong> ${app.coverLetter || 'No cover letter provided.'}</p>
                        <p><strong>Status:</strong> ${app.status}</p>
                        <div class="action-buttons">
                            <button class="accept" onclick="updateApplicationStatus(${app.id}, 'accepted')">Accept</button>
                            <button class="reject" onclick="updateApplicationStatus(${app.id}, 'rejected')">Reject</button>
                        </div>
                    `;
                    jobCard.appendChild(appCard);
                });

                applicationsList.appendChild(jobCard);
            }
        }

        async function updateApplicationStatus(appId, newStatus) {
            try {
                const response = await fetch('/api/job/updatestatus', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ jobId: appId, status: newStatus })
                });
                if (!response.ok) throw new Error('Failed to update status');
                fetchJobApplications(); // Refresh list
            } catch (error) {
                console.error('Error updating status:', error);
            }
        }

        window.onload = fetchJobApplications;
    </script>
</body>
</html>